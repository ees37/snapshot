var servo = require('servo-control/servo-control.js');
var shell = require('shelljs');
var fs = require('fs');
var gm = require('gm').subClass({ imageMagick: true });

var TIME_TO_MOVE = 3000;

var PHOTO_DIR = "/home/snapshot/public/images/plants/"

module.exports = {
  snapImage: function(dir, imgOut, callback)
  {
    console.log("snapping image");

    if (!fs.existsSync(dir))
    {
        fs.mkdirSync(dir);
    }

    // return both motors to the home position
    servo.returnHome(servo.motorHorizontal_, function() {

    });
    servo.returnHome(servo.motorVertical_, function() {

    });

    // assume both motors are in the home position
    var posHor = servo.motorVertical_.HOME;
    var posVer = servo.motorHorizontal_.HOME;
    // schedule all of the movement
    var photoNum = 0;
    var degree = 0.04;
    for (i = 0; i < servo.TOTAL_DEGREES / servo.motorHorizontal_.DEG_PER_IMG; ++i)
    {
      setTimeout(servo.moveMotor, i * TIME_TO_MOVE, servo.motorHorizontal_,
            degree += servo.ONE_DEGREE_VAL * servo.motorHorizontal_.DEG_PER_IMG,
            function() {
              capture(dir + photoNum++ + ".jpeg");
      });
    }

    console.log(servo.TOTAL_DEGREES * servo.motorHorizontal_.DEG_PER_IMG * 25);

    setTimeout(function()
    {
       stitchPhotos(dir, imgOut);
       shell.exec("rm -r " + dir);
       callback();
    }, (servo.TOTAL_DEGREES / servo.motorHorizontal_.DEG_PER_IMG) * TIME_TO_MOVE );
  }
}

function stitchPhotos(dir, imgOut)
{
  console.log("stitching");
  // create a graphics magick object
  var gmm = gm();
  // append each of the images
  if (fs.existsSync(dir))
  {
      var files = fs.readdirSync(dir);
      for (i = 0; i < files.length; ++i)
      {
        gmm.append(dir + files[i]);
      }
  }

  gmm.append(true); // append horizontally
  gmm.write(imgOut, function (err) {
      if (err) console.log(err);
  });
}

function capture(path)
{
  console.log("taking snapshot!");
  shell.exec("fswebcam --jpeg 100 " + path)
}
